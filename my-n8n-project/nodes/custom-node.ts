import { IExecuteFunctions } from 'n8n-core';
import { INodeType, INodeTypeDescription } from 'n8n-workflow';

export class CustomNode implements INodeType {
    description: INodeTypeDescription = {
        displayName: 'Custom Node',
        name: 'customNode',
        icon: 'file:customNode.svg',
        group: ['transform'],
        version: 1,
        description: 'A custom node for Jarvis-like functionality',
        defaults: {
            name: 'Custom Node',
            color: '#1F1F1F',
        },
        inputs: ['main'],
        outputs: ['main'],
        properties: [
            {
                displayName: 'Input',
                name: 'input',
                type: 'string',
                default: '',
                placeholder: 'Enter your command',
                required: true,
                description: 'The command to process',
            },
            {
                displayName: 'Output',
                name: 'output',
                type: 'string',
                default: '',
                placeholder: 'Response from Jarvis',
                required: false,
                description: 'The response generated by the command',
            },
        ],
    };

    async execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {
        const input = this.getNodeParameter('input', 0) as string;

        // Here you would implement the logic to process the input and generate a response
        const output = `Jarvis response to: ${input}`;

        return this.prepareOutputData([{ json: { output } }]);
    }
}